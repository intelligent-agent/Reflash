#!/bin/bash

ROTATION=$1
PLACE=$2

# Valid rotation options are normal,inverted,left,right
ROTATIONS=(0 90 180 270)

# Valid places to update
PLACES=(FBCON XORG CMDLINE WESTON)

EMMC=/dev/mmcblk2

info() {
    echo "[info] $1" >> /var/log/reflash.log
    echo "$1"
}

usage(){
    echo "Usage: $0 <rotation> <place>"
    echo "Valid  rotations: " "${ROTATIONS[@]}"
    echo "Valid  places: " "${PLACES[@]}"
}

update_xorg(){
    mkdir -p /mnt/emmc
    umount -q /mnt/emmc/
    mount "${EMMC}p2" /mnt/emmc

    XORG_DIR="/mnt/emmc/usr/share/X11/xorg.conf.d"
    if [ ! -d ${XORG_DIR} ]; then
        echo "Misssig directory: ${XORG_DIR}"
    else
        cat <<EOF > "${XORG_DIR}/90-monitor.conf"
Section "Monitor"
    Identifier "HDMI-1"
    Option "Rotate" "$ROT_XORG"
EndSection
Section "InputClass"
    Identifier "Coordinate Transformation Matrix"
    MatchIsTouchscreen "on"
    MatchDevicePath "/dev/input/event*"
    MatchDriver "libinput"
    Option "CalibrationMatrix" "$ROT_MATRIX"
EndSection
EOF
    fi
    umount /mnt/emmc
}

update_weston(){
    mkdir -p /mnt/emmc
    umount -q /mnt/emmc/ || true
    mount "${EMMC}p2" /mnt/emmc

    RELEASE=$(cut -d '.' -f 1 /mnt/emmc/etc/debian_version)
    CONFIG_FILE="/mnt/emmc/etc/xdg/weston/weston.ini"

    if [ ! -f "$CONFIG_FILE" ]; then
        echo "Misssig file: ${CONFIG_FILE}"
    else
        case "$RELEASE" in
            11 | 12)
                sed -i "s/transform.*/transform=${ROT_WESTON_11}/" "${CONFIG_FILE}"
                ;;
            10)
                sed -i "s/transform.*/transform=${ROT_WESTON_10}/" "${CONFIG_FILE}"
                ;;
            *)
                echo "Unknown debian release: '${RELEASE}'"
                ;;
        esac
    fi
    umount /mnt/emmc
}

update_cmdline(){
    mkdir -p /mnt/emmc
    umount -q /mnt/emmc/
    mount "${EMMC}p1" /mnt/emmc

    if [[ $(grep 'fbcon=' /mnt/emmc/armbianEnv.txt) ]]; then
        sed -i "s/\(fbcon=rotate:\)[0-3]/\1${ROT_FBCON}/" /mnt/emmc/armbianEnv.txt
    else
        sed -i "/extraargs=/ s/$/ fbcon=rotate:${ROT_FBCON}/" /mnt/emmc/armbianEnv.txt
    fi
    cat /mnt/emmc/armbianEnv.txt
    umount /mnt/emmc
}

update_fbcon() {
    echo $ROT_FBCON > /sys/devices/virtual/graphics/fbcon/rotate
}

if [ "$ROTATION" == "" ]; then
    usage 
    exit 1
fi

if [ "$PLACE" == "" ]; then
    usage
    exit 1
fi

case "${ROTATION}" in 
    0)
        ROT_XORG="normal"
        ROT_FBCON="0"
        ROT_PLYMOUTH=""
        ROT_WESTON_10="0"
        ROT_WESTON_11="normal"
        ROT_MATRIX="1 0 0 0 1 0 0 0 1"
        ;;
    90)
        ROT_XORG="right"
        ROT_FBCON="1"
        ROT_PLYMOUTH=""
        ROT_WESTON_10="270"
        ROT_WESTON_11="rotate-270"
        ROT_MATRIX="0 1 0 -1 0 1 0 0 1"
        ;;
    180)
        ROT_XORG="inverted"
        ROT_FBCON="2"
        ROT_PLYMOUTH=""
        ROT_WESTON_10="180"
        ROT_WESTON_11="rotate-180"
        ROT_MATRIX="-1 0 1 0 -1 1 0 0 1"
        ;;
    270)
        ROT_XORG="left"
        ROT_FBCON="3"
        ROT_PLYMOUTH=""
        ROT_WESTON_10="90"
        ROT_WESTON_11="rotate-90"
        ROT_MATRIX="0 -1 1 1 0 0 0 0 1"
        ;;
    *)
        echo "$ROTATION not in " "${ROTATIONS[@]}"
        exit 1
        ;;
esac

info "Setting rotation to ${ROTATION} for place ${PLACE}"

case "${PLACE}" in 
    FBCON)
        update_fbcon
        ;;
    XORG)
        update_xorg
        ;;
    CMDLINE)
        update_cmdline
        ;;
    WESTON)
        update_weston
        ;;
    *)
        echo "$PLACE not in " "${PLACES[@]}"
        exit 1
        ;;
esac
